fun back(x) {
    if (length(x) == 0) {
        return Err;
    };
    return at(x, length(x)-1);
};

fun front(x) {
    if (length(x) == 0) {
        return Err;
    };
    return at(x, 0);
};

fun replace(base_string, num, end) {
    if (is_string(base_string) and is_number(num)) {
        if (num < 0 or num >= length(base_string)) {
            return Err;
        };
        final = "";
        placement = 0;

        while (placement != num) {
            final += at(base_string, placement);
            placement++;
        };

        final += end;
        placement++;

        while (placement < length(base_string)) {
            final += at(base_string, placement);
            placement++;
        };
        return final;
    } else {
        fprint("is_string(base_string, param 1): " + is_string(base_string));
        fprint("is_number(num, param 2): " + is_number(num));
        throw("Bad input for replace.");
    };
};

fun insert(base_string, num, end) {
    if (is_string(base_string) and is_number(num)) {
        if (length(base_string) <= num) {
            return Err;
        };
        final = "";
        placement = 0;

        while (placement != num) {
            final += at(base_string, placement);
            placement++;
        };

        final += end;

        while (placement < length(base_string)) {
            final += at(base_string, placement);
            placement++;
        };
        return final;
    } else {
        return Err;
    };
};

fun substr(base_string, begin, end) {
    if (is_string(base_string) == false or is_number(begin) == false or is_number(end) == false) {
        return Err;
    };
    if (begin <= -1 or end >= length(base_string) or begin >= end) {
        return Err;
    };
    final = "";
    position = begin;
    while (position != end) {
        final += at(base_string, position);
        position++;
    };
    return final;
};

fun contains(container, containee) {
    if (length(container) < length(containee)) {
        return false;
    };
    to_return = false;
    if (length(container) == length(containee)) {
        if (container == containee) {
            return true;
        };
    } else {
        index = 0;
        while (index < (length(container) - length(containee))) {
            if (substr(container, index, (index+length(containee))) == containee) {
                #to_return = true;
                return true;
            };
            index++;
        };
    };
    return to_return;
};

fun asciival(target_string) {
    if (length(target_string) != 1) {
        return Err;
    };
    if (target_string == " ") { return 32; };
    if (target_string == "!") { return 33; };
    if (target_string == '"') { return 34; };
    if (target_string == "#") { return 35; };
    if (target_string == "$") { return 36; };
    if (target_string == "%") { return 37; };
    if (target_string == "&") { return 38; };
    if (target_string == "'") { return 39; };
    if (target_string == "(") { return 40; };
    if (target_string == ")") { return 41; };
    if (target_string == "*") { return 42; };
    if (target_string == "+") { return 43; };
    if (target_string == ",") { return 44; };
    if (target_string == "-") { return 45; };
    if (target_string == ".") { return 46; };
    if (target_string == "/") { return 47; };
    if (target_string == "0") { return 48; };
    if (target_string == "1") { return 49; };
    if (target_string == "2") { return 50; };
    if (target_string == "3") { return 51; };
    if (target_string == "4") { return 52; };
    if (target_string == "5") { return 53; };
    if (target_string == "6") { return 54; };
    if (target_string == "7") { return 55; };
    if (target_string == "8") { return 56; };
    if (target_string == "9") { return 57; };
    if (target_string == ":") { return 58; };
    if (target_string == ";") { return 59; };
    if (target_string == "<") { return 60; };
    if (target_string == "=") { return 61; };
    if (target_string == ">") { return 62; };
    if (target_string == "?") { return 63; };
    if (target_string == "@") { return 64; };
    if (target_string == "A") { return 65; };
    if (target_string == "B") { return 66; };
    if (target_string == "C") { return 67; };
    if (target_string == "D") { return 68; };
    if (target_string == "E") { return 69; };
    if (target_string == "F") { return 70; };
    if (target_string == "G") { return 71; };
    if (target_string == "H") { return 72; };
    if (target_string == "I") { return 73; };
    if (target_string == "J") { return 74; };
    if (target_string == "K") { return 75; };
    if (target_string == "L") { return 76; };
    if (target_string == "M") { return 77; };
    if (target_string == "N") { return 78; };
    if (target_string == "O") { return 79; };
    if (target_string == "P") { return 80; };
    if (target_string == "Q") { return 81; };
    if (target_string == "R") { return 82; };
    if (target_string == "S") { return 83; };
    if (target_string == "T") { return 84; };
    if (target_string == "U") { return 85; };
    if (target_string == "V") { return 86; };
    if (target_string == "W") { return 87; };
    if (target_string == "X") { return 88; };
    if (target_string == "Y") { return 89; };
    if (target_string == "Z") { return 90; };
    if (target_string == "[") { return 91; };
    if (target_string == "\") { return 92; };
    if (target_string == "]") { return 93; };
    if (target_string == "^") { return 94; };
    if (target_string == "_") { return 95; };
    if (target_string == "'") { return 96; };
    if (target_string == "a") { return 97; };
    if (target_string == "b") { return 98; };
    if (target_string == "c") { return 99; };
    if (target_string == "d") { return 100; };
    if (target_string == "e") { return 101; };
    if (target_string == "f") { return 102; };
    if (target_string == "g") { return 103; };
    if (target_string == "h") { return 104; };
    if (target_string == "i") { return 105; };
    if (target_string == "j") { return 106; };
    if (target_string == "k") { return 107; };
    if (target_string == "l") { return 108; };
    if (target_string == "m") { return 109; };
    if (target_string == "n") { return 110; };
    if (target_string == "o") { return 111; };
    if (target_string == "p") { return 112; };
    if (target_string == "q") { return 113; };
    if (target_string == "r") { return 114; };
    if (target_string == "s") { return 115; };
    if (target_string == "t") { return 116; };
    if (target_string == "u") { return 117; };
    if (target_string == "v") { return 118; };
    if (target_string == "w") { return 119; };
    if (target_string == "x") { return 120; };
    if (target_string == "y") { return 121; };
    if (target_string == "z") { return 122; };
    if (target_string == "{") { return 123; };
    if (target_string == "|") { return 124; };
    if (target_string == "}") { return 125; };
    if (target_string == "~") { return 126; };
    return Err;
};
